name: 🏢 Bizinfo Complete Workflow

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1-5'  # 평일 오후 5시 (KST)

jobs:
  collect:
    name: 기업마당 완전 자동 처리
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 supabase pandas openpyxl
        pip install selenium webdriver-manager
    
    - name: Step 1 - Excel Collection
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "======================================"
        echo "  STEP 1: 기업마당 엑셀 데이터 수집"
        echo "======================================"
        python scripts/bizinfo_excel_collector.py
    
    - name: Step 2 - Attachment & Summary Crawler (Aug 8 Version)
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "======================================"
        echo "  STEP 2: 상세페이지 크롤링 (8월 8일 버전)"
        echo "======================================"
        echo "첨부파일 + 요약 생성..."
        python scripts/bizinfo_attachment_crawler.py
    
    - name: Step 3 - Attachment Processing
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "======================================"
        echo "  STEP 3: 첨부파일 정리"
        echo "======================================"
        python scripts/bizinfo_complete_processor_fast.py
    
    - name: Generate Final Report
      if: always()
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        cat << 'EOF' > report.py
        import os
        from supabase import create_client
        from datetime import datetime
        
        url = os.environ.get('SUPABASE_URL')
        key = os.environ.get('SUPABASE_SERVICE_KEY')
        
        if not url or not key:
            print("환경변수 오류: SUPABASE_URL 또는 SUPABASE_SERVICE_KEY가 설정되지 않았습니다.")
            exit(1)
            
        supabase = create_client(url, key)
        
        try:
            # 전체 통계
            total = supabase.table('bizinfo_complete').select('id').execute()
            total_count = len(total.data) if total.data else 0
            
            # 오늘 추가된 데이터
            today = datetime.now().date().isoformat()
            today_new = supabase.table('bizinfo_complete').select('id').gte('created_at', today).execute()
            today_count = len(today_new.data) if today_new.data else 0
            
            # 정상 요약 보유 데이터 (150자 이상)
            all_data = supabase.table('bizinfo_complete').select('id,bsns_sumry').limit(1000).execute()
            if all_data.data:
                with_summary = sum(1 for item in all_data.data 
                                 if item.get('bsns_sumry') and len(item['bsns_sumry']) > 150)
            else:
                with_summary = 0
            
            # 첨부파일 보유 데이터
            with_attach = supabase.table('bizinfo_complete').select('id,attachment_urls').limit(1000).execute()
            attach_count = sum(1 for item in with_attach.data 
                             if item.get('attachment_urls') and item['attachment_urls'] != [])
            
            print('\n' + '='*60)
            print('      🏢 기업마당 처리 결과 보고서')
            print('='*60)
            print(f'📊 전체 데이터: {total_count}개')
            print(f'📊 오늘 신규 추가: {today_count}개')
            print(f'📊 정상 요약 보유 (샘플 1000개): {with_summary}개 ({with_summary*100/min(1000, total_count):.1f}%)')
            print(f'📊 첨부파일 보유 (샘플 1000개): {attach_count}개 ({attach_count*100/min(1000, total_count):.1f}%)')
            
            # 최근 데이터 상태 점검
            recent = supabase.table('bizinfo_complete').select('id,attachment_urls,bsns_sumry,created_at').order('created_at', desc=True).limit(100).execute()
            if recent.data:
                recent_with_attach = sum(1 for item in recent.data 
                                       if item.get('attachment_urls') and item['attachment_urls'] != [])
                recent_with_summary = sum(1 for item in recent.data 
                                        if item.get('bsns_sumry') and len(item['bsns_sumry']) > 150)
                print(f'\n📌 최근 100개 데이터:')
                print(f'   - 첨부파일 보유: {recent_with_attach}개 ({recent_with_attach}%)')
                print(f'   - 정상 요약: {recent_with_summary}개 ({recent_with_summary}%)')
                if recent_with_attach < 70:
                    print('   ⚠️ 경고: 최근 데이터 첨부파일 수집률이 낮습니다!')
                if recent_with_summary < 70:
                    print('   ⚠️ 경고: 최근 데이터 요약 품질이 낮습니다!')
            
            # 품질 체크
            quality_score = (with_summary / min(1000, total_count) * 100) if total_count > 0 else 0
            attach_score = (attach_count / min(1000, total_count) * 100) if total_count > 0 else 0
            
            print('\n📈 품질 평가:')
            if quality_score >= 90:
                print('  ✅ 요약 품질: 우수 (90% 이상)')
            elif quality_score >= 70:
                print('  ⚠️ 요약 품질: 보통 (70-90%)')
            else:
                print('  ❌ 요약 품질: 개선 필요 (70% 미만)')
            
            if attach_score >= 90:
                print('  ✅ 첨부파일: 우수 (90% 이상)')
            elif attach_score >= 70:
                print('  ⚠️ 첨부파일: 보통 (70-90%)')
            else:
                print('  ❌ 첨부파일: 개선 필요 (70% 미만)')
            
            # 8월 8일 버전 사용 알림
            print('\n🔧 처리 방식:')
            print('  - 8월 8일 정상 작동 버전 사용')
            print('  - HTTP 크롤링 + BeautifulSoup')
            print('  - 상세페이지 요약 생성 포함')
            
            if today_count > 0:
                print(f'\n✅ 오늘 {today_count}개 처리 성공!')
            else:
                print('\n⚠️ 오늘 새로운 데이터가 없습니다')
            
            print('='*60)
            
        except Exception as e:
            print(f"보고서 생성 중 오류: {e}")
            exit(1)
        EOF
        python report.py
