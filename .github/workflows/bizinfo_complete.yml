name: Bizinfo Auto Collection

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1-5'  # 평일 오후 5시 (KST)

jobs:
  collect:
    name: 기업마당 자동 처리
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install dependencies
      run: |
        pip install selenium webdriver-manager pandas openpyxl
        pip install requests beautifulsoup4 supabase
    
    - name: Run Bizinfo Collection
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "Starting Bizinfo collection..."
        python scripts/bizinfo_excel_collector.py
    
    - name: Run processor
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "Processing attachments and hashtags..."
        python scripts/bizinfo_complete_processor.py
    
    - name: Generate Final Report
      if: always()
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        cat << 'EOF' > report.py
        import os
        from supabase import create_client
        from datetime import datetime, timedelta
        
        url = os.environ.get('SUPABASE_URL')
        key = os.environ.get('SUPABASE_SERVICE_KEY') or os.environ.get('SUPABASE_KEY')
        
        if not url or not key:
            print("환경변수 오류: SUPABASE_URL 또는 SUPABASE_SERVICE_KEY가 설정되지 않았습니다.")
            exit(1)
            
        supabase = create_client(url, key)
        
        try:
            # 전체 통계
            total = supabase.table('bizinfo_complete').select('id').execute()
            total_count = len(total.data) if total.data else 0
            
            # 오늘 추가된 데이터
            today = datetime.now().date().isoformat()
            today_new = supabase.table('bizinfo_complete').select('id').gte('created_at', today).execute()
            today_count = len(today_new.data) if today_new.data else 0
            
            # 오늘 업데이트된 데이터  
            today_updated = supabase.table('bizinfo_complete').select('id').gte('updated_at', today).execute()
            updated_count = len(today_updated.data) if today_updated.data else 0
            
            # 첨부파일 보유 데이터
            with_attach = supabase.table('bizinfo_complete').select('id').neq('attachment_urls', '[]').execute()
            attach_count = len(with_attach.data) if with_attach.data else 0
            
            # 요약 처리된 데이터
            with_summary = supabase.table('bizinfo_complete').select('id').not_.is_('summary', 'null').execute()
            summary_count = len(with_summary.data) if with_summary.data else 0
            
            # 최근 처리 데이터 5개
            recent = supabase.table('bizinfo_complete').select(
                'bsns_title', 'prfnm', 'attachment_count', 'created_at'
            ).order('created_at', desc=True).limit(5).execute()
            
            print('\n' + '='*50)
            print('      기업마당 처리 결과 보고서')
            print('='*50)
            print('\n📊 전체 통계')
            print('━' * 40)
            print(f'전체 데이터: {total_count}개')
            print(f'오늘 신규 추가: {today_count}개')
            print(f'오늘 업데이트: {updated_count}개')
            print(f'첨부파일 보유: {attach_count}개')
            print(f'요약 처리 완료: {summary_count}개')
            
            if today_count > 0 or updated_count > 0:
                print('\n✅ 오늘 처리 성공!')
            else:
                print('\n⚠️ 오늘 새로운 데이터가 없습니다')
            
            print('\n📝 최근 추가 데이터 (상위 5개)')
            print('━' * 40)
            if recent.data:
                for item in recent.data[:5]:
                    print(f"• {item['bsns_title'][:40]}...")
                    if item.get('prfnm'):
                        print(f"  수행기관: {item['prfnm']}")
                    print(f"  첨부: {item.get('attachment_count', 0)}개 | 등록: {item['created_at'][:10]}")
                    print()
            else:
                print("최근 데이터가 없습니다.")
            
            print('━' * 40)
            print(f'처리 완료 시간: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
            print('='*50)
            
        except Exception as e:
            print(f"보고서 생성 중 오류: {e}")
            exit(1)
        EOF
        python report.py
