name: K-Startup Auto Collection

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * 0-4'  # 평일 오전 7시 (KST)

jobs:
  collect:
    name: K-Startup 자동 처리
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 supabase
    
    - name: Run K-Startup Collection (Improved Version)
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "Starting K-Startup collection with improved attachment handling..."
        python scripts/kstartup_collector_improved.py
    
    - name: Generate Final Report
      if: always()
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        cat << 'EOF' > report.py
        import os
        from supabase import create_client
        from datetime import datetime
        
        url = os.environ.get('SUPABASE_URL')
        key = os.environ.get('SUPABASE_SERVICE_KEY') or os.environ.get('SUPABASE_KEY')
        
        if not url or not key:
            print("환경변수 오류")
            exit(1)
            
        supabase = create_client(url, key)
        
        try:
            # 전체 통계
            total = supabase.table('kstartup_complete').select('id').execute()
            total_count = len(total.data) if total.data else 0
            
            # 오늘 추가된 데이터
            today = datetime.now().date().isoformat()
            today_new = supabase.table('kstartup_complete').select('id').gte('created_at', today).execute()
            today_count = len(today_new.data) if today_new.data else 0
            
            # 첨부파일 통계
            with_attach = supabase.table('kstartup_complete').select('id').neq('attachment_urls', '[]').execute()
            attach_count = len(with_attach.data) if with_attach.data else 0
            
            # unknown 확장자 체크
            all_attachments = supabase.table('kstartup_complete').select('attachment_urls').neq('attachment_urls', '[]').execute()
            unknown_count = 0
            proper_count = 0
            if all_attachments.data:
                for item in all_attachments.data:
                    if item.get('attachment_urls'):
                        for att in item['attachment_urls']:
                            if isinstance(att, dict):
                                filename = att.get('safe_filename', '')
                                if filename.endswith('.unknown'):
                                    unknown_count += 1
                                else:
                                    proper_count += 1
            
            print('\n' + '='*50)
            print('      K-STARTUP 수집 결과')
            print('='*50)
            print(f'전체: {total_count}개 | 오늘 신규: {today_count}개')
            print(f'첨부파일: {attach_count}개 ({attach_count/total_count*100:.1f}%)')
            print(f'정상 확장자: {proper_count}개 | Unknown: {unknown_count}개')
            
            if unknown_count == 0:
                print('✅ 모든 첨부파일 정상!')
            else:
                print(f'⚠️ Unknown 파일 {unknown_count}개 존재')
            
            print('='*50)
            
        except Exception as e:
            print(f"보고서 오류: {e}")
        EOF
        python report.py
