name: K-Startup Auto Collection

on:
  workflow_dispatch:
    inputs:
      mode:
        description: '수집 모드'
        required: true
        default: 'daily'
        type: choice
        options:
        - daily    # 최근 200개만 (2-3초)
        - full     # 전체 259페이지 (30-60초)
  schedule:
    - cron: '0 22 * * *'  # 매일 오전 7시 (KST)

jobs:
  collect:
    name: K-Startup 자동 처리
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 supabase python-dotenv lxml
    
    - name: Determine Mode
      id: mode
      run: |
        if [ "${{ github.event_name }}" = "schedule" ]; then
          echo "mode=daily" >> $GITHUB_OUTPUT
          echo "📅 스케줄 실행: daily 모드"
        else
          echo "mode=${{ github.event.inputs.mode || 'daily' }}" >> $GITHUB_OUTPUT
          echo "🎯 수동 실행: ${{ github.event.inputs.mode || 'daily' }} 모드"
        fi
    
    # Step 1: 수집 (모드에 따라)
    - name: Step 1 - Daily Collection
      if: steps.mode.outputs.mode == 'daily'
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "🚀 Daily 모드: 최근 200개만 확인"
        python scripts/collect_kstartup_daily.py
    
    - name: Step 1 - Full Collection
      if: steps.mode.outputs.mode == 'full'
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "🔍 Full 모드: 전체 259페이지 확인"
        python scripts/collect_kstartup_batch.py
    
    # Step 2: bsns_sumry 병렬 파싱
    - name: Step 2 - Parallel Parsing
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "📝 Step 2: 상세 내용 병렬 파싱..."
        python scripts/kstartup_parallel_parser.py
      continue-on-error: true
    
    # Step 3: 첨부파일 정보 처리
    - name: Step 3 - Attachment Processing
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "📎 Step 3: 첨부파일 정보 처리..."
        python scripts/kstartup_attachment_fix.py
      continue-on-error: true
    
    - name: Generate Final Report
      if: always()
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        cat << 'EOF' > report.py
        import os
        from supabase import create_client
        from datetime import datetime
        
        url = os.environ.get('SUPABASE_URL')
        key = os.environ.get('SUPABASE_SERVICE_KEY') or os.environ.get('SUPABASE_KEY')
        
        if not url or not key:
            print("환경변수 오류")
            exit(1)
            
        supabase = create_client(url, key)
        
        try:
            # 전체 통계
            total = supabase.table('kstartup_complete').select('id').execute()
            total_count = len(total.data) if total.data else 0
            
            # 오늘 추가된 데이터
            today = datetime.now().date().isoformat()
            today_new = supabase.table('kstartup_complete').select('id').gte('created_at', today).execute()
            today_count = len(today_new.data) if today_new.data else 0
            
            # 상태별 통계
            status_data = supabase.table('kstartup_complete').select('status').execute()
            status_counts = {}
            if status_data.data:
                for item in status_data.data:
                    status = item.get('status', '상태미정')
                    status_counts[status] = status_counts.get(status, 0) + 1
            
            print('\n' + '='*60)
            print('      K-STARTUP 처리 결과')
            print('='*60)
            print(f'📊 전체: {total_count}개 | 오늘 신규/업데이트: {today_count}개')
            print('')
            print('📈 상태별 분포:')
            for status, count in sorted(status_counts.items(), key=lambda x: x[1], reverse=True):
                print(f'   - {status}: {count}개')
            print('='*60)
            
        except Exception as e:
            print(f"보고서 오류: {e}")
        EOF
        python report.py
