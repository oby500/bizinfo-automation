name: 🔧 K-Startup 수동 실행

on:
  workflow_dispatch:
    inputs:
      action:
        description: '실행할 작업 선택'
        required: true
        default: 'full_process'
        type: choice
        options:
          - full_process     # 수집 + 처리 전체
          - collect_only     # 수집만
          - attachment_only  # 첨부파일 처리만

jobs:
  manual-kstartup:
    name: K-Startup 수동 처리
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install requests beautifulsoup4 supabase
    
    - name: Collect K-Startup Data
      if: ${{ github.event.inputs.action == 'collect_only' || github.event.inputs.action == 'full_process' }}
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "=== K-Startup 데이터 수집 ==="
        echo "실행 시간: $(date '+%Y-%m-%d %H:%M:%S')"
        python scripts/kstartup_collector.py
    
    - name: Process Attachments
      if: ${{ github.event.inputs.action == 'attachment_only' || github.event.inputs.action == 'full_process' }}
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "=== K-Startup 첨부파일 처리 ==="
        python scripts/kstartup_complete_processor.py
    
    - name: Show Results
      if: always()
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        cat << 'EOF' > report.py
        import os
        from supabase import create_client
        from datetime import datetime
        
        url = os.environ.get('SUPABASE_URL')
        key = os.environ.get('SUPABASE_SERVICE_KEY') or os.environ.get('SUPABASE_KEY')
        
        if not url or not key:
            print("환경변수 오류")
            exit(1)
            
        supabase = create_client(url, key)
        
        # 오늘 처리된 데이터
        today = datetime.now().date().isoformat()
        today_data = supabase.table('kstartup_complete').select('id').gte('created_at', today).execute()
        
        # 첨부파일 현황
        with_attach = supabase.table('kstartup_complete').select('id').neq('attachment_urls', '[]').execute()
        
        print('=' * 50)
        print('   K-STARTUP 수동 실행 결과')
        print('=' * 50)
        print(f'📊 오늘 처리: {len(today_data.data)}개')
        print(f'📎 첨부파일 보유: {len(with_attach.data)}개')
        print(f'⏰ 완료 시간: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
        print('=' * 50)
        EOF
        python report.py
