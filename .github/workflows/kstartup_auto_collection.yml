name: K-Startup Auto Collection

on:
  schedule:
    # 매일 오전 9시 실행 (UTC 00:00 = KST 09:00)
    - cron: '0 0 * * *'
  workflow_dispatch: # 수동 실행 버튼
    inputs:
      mode:
        description: '수집 모드'
        required: true
        default: 'daily'
        type: choice
        options:
        - daily    # 최근 데이터만
        - full     # 전체 수집

jobs:
  collect-kstartup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install supabase
        pip install python-dotenv
        pip install beautifulsoup4
        pip install lxml
        pip install pandas
        pip install openpyxl
    
    - name: Determine Mode
      id: mode
      run: |
        if [ "${{ github.event_name }}" = "schedule" ]; then
          echo "mode=daily" >> $GITHUB_OUTPUT
          echo "📅 스케줄 실행: daily 모드"
        else
          echo "mode=${{ github.event.inputs.mode || 'daily' }}" >> $GITHUB_OUTPUT
          echo "🎯 수동 실행: ${{ github.event.inputs.mode || 'daily' }} 모드"
        fi
    
    - name: Create .env file
      run: |
        # 개발 환경 사용 (현재 사용 중)
        echo "SUPABASE_URL=https://csuziaogycciwgxxmahm.supabase.co" >> .env
        echo "SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNzdXppYW9neWNjaXdneHhtYWhtIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzYxNTc4MCwiZXhwIjoyMDY5MTkxNzgwfQ.HnhM7zSLzi7lHVPd2IVQKIACDq_YA05mBMgZbSN1c9Q" >> .env
        echo "COLLECTION_MODE=${{ steps.mode.outputs.mode }}" >> .env
    
    # Step 1: 실제 K-Startup 데이터 수집
    - name: Collect K-Startup Data
      run: |
        echo "🚀 K-Startup 실제 데이터 수집 시작 (개선된 로직)..."
        python scripts/kstartup_real_collector.py
      continue-on-error: true
    
    # Step 4: 수집 결과 확인
    - name: Verify collection results
      run: |
        echo "📊 수집 결과 확인..."
        python -c "
        from supabase import create_client
        import os
        from datetime import datetime
        from dotenv import load_dotenv
        
        load_dotenv()
        url = os.getenv('SUPABASE_URL')
        key = os.getenv('SUPABASE_KEY')
        supabase = create_client(url, key)
        
        # 전체 개수 확인
        result = supabase.table('kstartup_complete').select('announcement_id').execute()
        total = len(result.data) if result.data else 0
        
        # 오늘 수집된 개수
        today = datetime.now().strftime('%Y-%m-%d')
        today_result = supabase.table('kstartup_complete').select('announcement_id').gte('created_at', today).execute()
        today_count = len(today_result.data) if today_result.data else 0
        
        # 상태별 개수
        status_result = supabase.table('kstartup_complete').select('status').execute()
        status_counts = {}
        if status_result.data:
            for item in status_result.data:
                status = item.get('status', '상태미정')
                status_counts[status] = status_counts.get(status, 0) + 1
        
        print('='*60)
        print('📊 K-Startup 수집 완료 보고서')
        print('='*60)
        print(f'총 저장된 공고: {total}개')
        print(f'오늘 수집/업데이트: {today_count}개')
        print('')
        print('상태별 분포:')
        for status, count in sorted(status_counts.items(), key=lambda x: x[1], reverse=True):
            print(f'  - {status}: {count}개')
        print('='*60)
        "
    
    # Step 5: Edge Function 트리거 (추가 처리)
    - name: Trigger Edge Function
      if: success()
      run: |
        echo "🔗 Supabase Edge Function 트리거 중..."
        curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
          "${{ secrets.SUPABASE_URL }}/functions/v1/bizinfo-auto-collector" \
          -d '{"trigger_source": "github_actions", "mode": "${{ steps.mode.outputs.mode }}"}'
      continue-on-error: true
    
    # Step 6: 실행 완료 알림
    - name: Send completion notification
      if: always()
      run: |
        echo "✅ K-Startup 자동 수집 완료"
        echo "실행 시간: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "GitHub Actions + Edge Function 연동 완료"
