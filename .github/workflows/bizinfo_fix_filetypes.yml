name: 🔧 BizInfo 파일 타입 수정

on:
  workflow_dispatch:
    inputs:
      fix_type:
        description: '수정 타입'
        required: true
        default: 'all'
        type: choice
        options:
          - all           # 모든 문제 수정
          - getImageFile  # getImageFile 타입만
          - encoding      # 인코딩 문제만
          - doc_unknown   # DOC/UNKNOWN 타입만

jobs:
  fix-filetypes:
    runs-on: ubuntu-latest
    
    steps:
    - name: 체크아웃
      uses: actions/checkout@v3
    
    - name: Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install supabase requests
    
    - name: 수정 전 상태 확인
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        python -c "
        import os
        from supabase import create_client
        
        supabase = create_client(os.getenv('SUPABASE_URL'), os.getenv('SUPABASE_KEY'))
        
        # 문제 파일 타입 카운트
        query = '''
        WITH file_types AS (
            SELECT 
                jsonb_array_elements(attachment_urls)->>'type' as file_type
            FROM bizinfo_complete
            WHERE attachment_urls IS NOT NULL AND attachment_urls != '[]'::jsonb
        )
        SELECT 
            file_type,
            COUNT(*) as count
        FROM file_types
        WHERE file_type IN ('getImageFile', 'DOC', 'UNKNOWN', 'HTML')
        GROUP BY file_type
        ORDER BY count DESC
        '''
        
        response = supabase.rpc('execute_sql', {'query': query}).execute()
        
        print('='*50)
        print('현재 문제 파일 타입 현황:')
        print('='*50)
        
        total = 0
        if response.data:
            for row in response.data:
                print(f\"  - {row['file_type']}: {row['count']}개\")
                total += row['count']
            print(f'\n총 {total}개 파일 수정 필요')
        else:
            print('수정할 파일이 없습니다.')
        "
    
    - name: 파일 타입 수정 실행
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        FIX_TYPE: ${{ github.event.inputs.fix_type }}
      run: |
        echo "수정 타입: $FIX_TYPE"
        python scripts/bizinfo_filetype_complete_fix.py
    
    - name: 수정 후 결과 확인
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        python -c "
        import os
        from supabase import create_client
        
        supabase = create_client(os.getenv('SUPABASE_URL'), os.getenv('SUPABASE_KEY'))
        
        # 전체 파일 타입 분포
        query = '''
        WITH file_types AS (
            SELECT 
                jsonb_array_elements(attachment_urls)->>'type' as file_type
            FROM bizinfo_complete
            WHERE attachment_urls IS NOT NULL AND attachment_urls != '[]'::jsonb
        )
        SELECT 
            file_type,
            COUNT(*) as count,
            ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage
        FROM file_types
        GROUP BY file_type
        ORDER BY count DESC
        '''
        
        response = supabase.rpc('execute_sql', {'query': query}).execute()
        
        print('='*50)
        print('수정 후 전체 파일 타입 분포:')
        print('='*50)
        
        if response.data:
            for row in response.data:
                print(f\"  - {row['file_type']}: {row['count']}개 ({row['percentage']}%)\")
        
        # 깨진 파일명 확인
        query2 = '''
        SELECT COUNT(*) as broken_count
        FROM bizinfo_complete
        WHERE attachment_urls IS NOT NULL 
        AND (
            attachment_urls::text LIKE '%Ã%' OR
            attachment_urls::text LIKE '%Â%'
        )
        '''
        
        response2 = supabase.rpc('execute_sql', {'query': query2}).execute()
        
        if response2.data:
            print(f\"\n깨진 파일명 남은 개수: {response2.data[0]['broken_count']}개\")
        "
    
    - name: 최종 보고서
      run: |
        echo "================================"
        echo "BizInfo 파일 타입 수정 완료"
        echo "================================"
        echo ""
        echo "✅ 수정 작업이 완료되었습니다."
        echo ""
        echo "주요 개선사항:"
        echo "1. getImageFile 타입 → 실제 파일 타입으로 변환"
        echo "2. DOC 타입 → 대부분 HWP로 수정"
        echo "3. UNKNOWN 타입 → 파일명 기반 타입 감지"
        echo "4. HTML 타입 → 실제 타입으로 변환"
        echo "5. 깨진 파일명 인코딩 복구"
        echo ""
        echo "다음 단계:"
        echo "- 첨부파일 파싱 시스템 구축"
        echo "- PDF/DOCX 우선 처리"
        echo "- 벡터 DB 통합"
