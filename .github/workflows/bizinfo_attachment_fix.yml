name: 🔧 BizInfo Attachment Fix (K-Startup Style)

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: '테스트 모드 (처음 10개만 처리)'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  fix-attachments:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: 체크아웃
      uses: actions/checkout@v3
    
    - name: Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 supabase python-dotenv
    
    - name: 환경변수 설정
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        echo "SUPABASE_URL=$SUPABASE_URL" >> .env
        echo "SUPABASE_KEY=$SUPABASE_KEY" >> .env
    
    - name: 테스트 모드 수정 (필요시)
      if: ${{ github.event.inputs.test_mode == 'true' }}
      run: |
        # 테스트 모드일 때 처음 10개만 처리하도록 수정
        sed -i 's/.execute()/.limit(10).execute()/' scripts/bizinfo_attachment_fix_kstartup_style.py
        echo "🧪 테스트 모드: 처음 10개 공고만 처리합니다."
    
    - name: 🚀 첨부파일 정보 수정 실행
      run: |
        echo "============================================================"
        echo " BizInfo 첨부파일 K-Startup 방식 적용"
        echo "============================================================"
        echo "모드: ${{ github.event.inputs.test_mode == 'true' && '테스트 (10개)' || '전체 처리' }}"
        echo ""
        python scripts/bizinfo_attachment_fix_kstartup_style.py
    
    - name: 📊 결과 확인
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        cat << 'EOF' > check_results.py
        import os
        from supabase import create_client
        from dotenv import load_dotenv
        
        load_dotenv()
        url = os.environ.get('SUPABASE_URL')
        key = os.environ.get('SUPABASE_KEY')
        supabase = create_client(url, key)
        
        # DOC 타입 남은 개수
        result = supabase.table('bizinfo_complete')\
            .select('pblanc_id', count='exact')\
            .execute()
        
        total = result.count if hasattr(result, 'count') else 0
        
        # 샘플 데이터
        sample = supabase.table('bizinfo_complete')\
            .select('pblanc_id, pblanc_nm, attachment_urls')\
            .eq('pblanc_id', 'PBLN_000000000113616')\
            .execute()
        
        print("\n" + "="*60)
        print(" 📊 처리 결과 확인")
        print("="*60)
        
        if sample.data:
            for s in sample.data:
                print(f"\n공고: {s['pblanc_id']}")
                print(f"제목: {s['pblanc_nm'][:40]}...")
                for att in s.get('attachment_urls', []):
                    print(f"  - Type: {att.get('type')}")
                    print(f"    File: {att.get('display_filename')}")
        
        # 통계
        doc_count = 0
        download_count = 0
        
        all_data = supabase.table('bizinfo_complete')\
            .select('attachment_urls')\
            .not_.is_('attachment_urls', 'null')\
            .execute()
        
        for row in all_data.data:
            if row.get('attachment_urls'):
                for att in row['attachment_urls']:
                    if att.get('type') == 'DOC':
                        doc_count += 1
                    if att.get('display_filename') == '다운로드':
                        download_count += 1
        
        print(f"\n📈 통계:")
        print(f"  - 남은 DOC 타입: {doc_count}개")
        print(f"  - 남은 '다운로드' 파일명: {download_count}개")
        print("="*60)
        EOF
        
        python check_results.py
    
    - name: 로그 업로드
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: attachment-fix-logs
        path: |
          bizinfo_attachment_fix_*.log
        retention-days: 7
